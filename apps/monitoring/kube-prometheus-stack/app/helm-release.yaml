---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 10m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 51.7.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    alertmanager:
      ingress:
        enabled: true
        hosts:
          - &host-alert-manager alert-manager.${SECRET_DOMAIN}
        paths:
          - /
        pathType: Prefix
        tls:
          - hosts:
              - *host-alert-manager
            secretName: alert-manager-tls
      alertManagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 5Gi
    grafana:
      enabled: false
      forceDeployDashboards: true
    kubelet:
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    kubeControllerManager:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
    kube-state-metrics:
      metricLabelsAllowlist:
        - "persistentvolumeclaims=[*]"
      prometheus:
        monitor:
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    prometheus:
      ingress:
        enabled: true
        hosts:
          - &host-prometheus prometheus.${SECRET_DOMAIN}
        paths:
          - /
        pathType: Prefix
        tls:
          - hosts:
              - *host-prometheus
            secretName: prometheus-tls
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
      thanosIngress:
        enabled: true
        pathType: Prefix
        ingressClassName: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
        hosts:
          - &host-thanos-sidecar "thanos-sidecar.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - *host-thanos-sidecar
      prometheusSpec:
        enableAdminAPI: true
        replicaExternalLabelName: __replica__
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 2d
        retentionSize: "5GB"
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 10Gi
        thanos:
          image: quay.io/thanos/thanos:v0.32.3
          # renovate: datasource=docker image=quay.io/thanos/thanos
          version: "v0.31.0"
        #additionalScrapeConfigs:
